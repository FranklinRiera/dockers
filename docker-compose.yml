version: '3.8'

services:
  webapp:
    build: ./myproject
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      backend:
        ipv4_address: 192.168.56.10

  db:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'root'
      POSTGRES_DB: 'DB'
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./postgres-init:/docker-entrypoint-initdb.d/init.sql
    networks:
      backend:
        ipv4_address: 192.168.56.11
    command: postgres -c listen_addresses='*'

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - webapp
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.56.0/24


volumes:
  postgres-data:
